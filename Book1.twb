<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.0hz3zz10osvbnp1a337qq0ms69ir' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.1o4whjm009dhfn11uouac0xn01ai'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/user/Desktop/Work Stuff/Foundation/Deloitte Virtual Internship' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1o4whjm009dhfn11uouac0xn01ai' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_1221882907532443648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Unhealthy (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_1221882907532443648]' peg='0' size='3.03' />
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/user/AppData/Local/Temp/TableauTemp/#TableauTemp_1bzaz1c1egpisq10pvqbm0ju5glv.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/20/2025 07:54:18 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>321408</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6741</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_B3C3491C05A040A38B762F4D6258CA0B'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1o4whjm009dhfn11uouac0xn01ai' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_0E4890A4AB8440309FD6308CE6D92E94]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.0hz3zz10osvbnp1a337qq0ms69ir' />
          </datasources>
          <datasource-dependencies datasource='federated.0hz3zz10osvbnp1a337qq0ms69ir'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1221882907532443648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1221882907532443648]' derivation='Sum' name='[sum:Calculation_1221882907532443648:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[sum:Calculation_1221882907532443648:qk]</rows>
        <cols>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[none:factory:nk]</cols>
        <show-full-range>
          <column>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[none:Unhealthy (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{811BA70A-AADE-4613-ADBF-15E686B93C15}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.0hz3zz10osvbnp1a337qq0ms69ir' />
          </datasources>
          <datasource-dependencies datasource='federated.0hz3zz10osvbnp1a337qq0ms69ir'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1221882907532443648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1221882907532443648]' derivation='Sum' name='[sum:Calculation_1221882907532443648:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hz3zz10osvbnp1a337qq0ms69ir].[Action (Factory)]'>
            <groupfilter function='member' level='[factory]' member='&quot;daikibo-shenzhen&quot;' user:ui-action-filter='[Action1_0E4890A4AB8440309FD6308CE6D92E94]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[sum:Calculation_1221882907532443648:qk]</rows>
        <cols>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{4D15F12E-614B-4751-B50F-83BCA9FB217D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='652' maxwidth='950' minheight='552' minwidth='850' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97106' id='3' param='vert' type-v2='layout-flow' w='98316' x='842' y='1447'>
            <zone h='48553' id='5' name='Sheet 1' w='98316' x='842' y='1447'>
              <layout-cache minheight='184' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='48553' id='6' name='Sheet 2' w='98316' x='842' y='50000'>
              <layout-cache minheight='184' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97106' id='9' param='vert' type-v2='layout-flow' w='98316' x='842' y='1447'>
                <zone fixed-size='280' h='48553' id='5' is-fixed='true' name='Sheet 1' w='98316' x='842' y='1447'>
                  <layout-cache minheight='184' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48553' id='6' is-fixed='true' name='Sheet 2' w='98316' x='842' y='50000'>
                  <layout-cache minheight='184' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{19CA5A16-89C6-4463-93B6-45BAFD72004B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F774F43D-997E-4B89-B944-AD2751FEF37B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57973694-544A-49F4-8EE8-2AAD5BFD9E6B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[none:factory:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[sum:Calculation_1221882907532443648:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[none:factory:nk]</field>
                    <field>[federated.0hz3zz10osvbnp1a337qq0ms69ir].[sum:Calculation_1221882907532443648:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;daikibo-shenzhen&quot;</value>
                  <value>840</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{D95D033C-E1F0-4842-AFCD-7CD8C9C93370}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      K+QNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      rpfLbgZxcOYAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
